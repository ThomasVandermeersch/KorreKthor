include ../header.pug

- var date = new Date(Date.parse(copy.createdAt))

div(class="container page")
    if messages.successEmail
        div(class="alert alert-success my-2" role="alert")= messages.successEmail
    
    if messages.successAnswerChange
        div(class="alert alert-success my-2" role="alert")= messages.successAnswerChange
    
    if messages.errorAnswerChange
        div(class="alert alert-danger my-2" role="alert")= messages.errorAnswerChange
        
    div(class="card my-2")
        div(class="card-body")
            
            h4(class="card-title") Copie d'examen - #[strong #{copy.user.fullName} (#{copy.user.matricule})] - Version #[strong #{copy.version}]

            p(class="card-subtitle mb-2 text-muted")= `${copy.exam.name} : ${("0" + date.getDate()).slice(-2)}/${("0" + (date.getMonth()+1)).slice(-2)}/${date.getFullYear()} - ${("0" + date.getHours()).slice(-2)}:${("0" + date.getMinutes()).slice(-2)}:${("0" + date.getSeconds()).slice(-2)}`
            p(class="card-subtitle mb-2 text-muted")= `Statut copie : ${copy.status}`

            - var point = Math.round(((copy.result[0]/copy.result[1])*20)*100)/100
            - var questions = JSON.parse(copy.answers)
          
            
            if disableChanges == false
                if copy.status == "error" || copy.status == "errorVersion"
                    h4(class="text-danger") Cote : #[strong Error]
                else
                    h4= 'Cote : ' + copy.result[0] + '/' + copy.result[1]

            div(class="photo my-3 row")
                div(class="tab col-10 col-sm-5 form-check p-0 m-auto")
                    h4(style="text-align:center") Aperçu de la détection
                    if copy.user.fullName == "" && (session.userObject.authorizations == 0 || session.userObject.role == 1)
                        div
                            if messages.newUserName
                                div(class="alert alert-success my-2" role="alert")
                                    p= "Voulez-vous assigner " + messages.newUserName + " à la copie ?"
                                    form(class="form", action="/correction/updateUser/"+ copy.id, method="POST")
                                        input(type='hidden' name="newMatricule" value=messages.newUserMatricule[0])
                                        input(type='hidden' name="examId" value=copy.exam.id)
                                        button(class="btn btn-success" type="submit") OUI
                                    a(href="/see/copy/"+ copy.id)
                                        button(class="btn btn-danger") NON

                            form(class="form mt-5 row" action="/correction/getUserName/modifyStudent" method="POST")
                                if messages.userNoExist
                                    div(class="alert alert-danger my-2" role="alert")= messages.userNoExist
                                
                                input(type="hidden" name="copyId" value=copy.id id="examId")
                                h4(class="col-12") Modifier l'étudiant
                                div(class="col-10")
                                    input(type="input" class="form-control input bouton" name="matricule" id="newMatricule" placeholder="Matricule étudiant")
                                button(id='submitUserButton' class="btn btn-success bouton col-2" type="submit") Ajouter                            
                        br
                            //- form(class="form")

                            //-     input(type="hidden" name="examId" value=copy.exam.id id="examId")
                            //-     input(type="hidden" name="copyId" value=copy.id id='copyID')

                            //-     label(for="newMatricule" class="form-label") Entrer le matricule de l'étudiant
                            //-         button(type="button" class='btn' data-toggle="tooltip" data-placement="bottom" title="Le nom de l'étudiant doit être spécifié car il s'agit d'une copie supplémentaire; l'étudiant n'était pas présent dans le fichier Excel de départ.")
                            //-             i(class="fa fa-question-circle" style="font-size:24px;color:red")
                            //-     input(type="input" class="form-control bouton" name="newMatricule" id="newMatricule" placeholder="Ex: 17076")
                                
                            //-     div(class="") 
                            //-         button(id='submitUserButton' class="btn btn-sm btn-danger bouton mt-2 mb-2 col-12 col-xl-4 float-end" type="submit") Modifier l'etudiant

                    
                    table(id='tableId' class="table table-sm tableClass mt-0 p-0")                        
                        - var questionIndex = 0
                        each val,index in [...JSON.parse(copy.exam.corrections)[copy.version]]
                            tr
                                if(val.type == 'qcm')
                                    - questionIndex = questionIndex + 1
                                    td(class="hide-sm") 
                                        i Q.#{questionIndex}
                                        each response,rep in val.response
                                            td(style="text-align:center")
                                                
                                                if questions[index].status == "error"
                                                    input(class="form-check-input checkboxClass p-2 m-1", disabled=(disableChanges), type="checkbox", name=response value="yes")
                                                
                                                else
                                                    if questions[index].list[rep] == 0
                                                        input(class="form-check-input checkboxClass p-2 m-1", checked=false,disabled=(disableChanges), type="checkbox", name=response value="yes" )

                                                    else if questions[index].list[rep] == 1 
                                                        input(class="form-check-input checkboxClass p-2 m-1", checked=true,disabled=(disableChanges), type="checkbox", name=response value="yes" )

                                                    //- input(class="form-check-input checkboxClass p-2 m-1", checked=questions[index].list[rep],disabled=(disableChanges), type="checkbox", name=response value="yes" )
                                    
                                    td 
                                        if questions[index].status == "error"
                                            strong(class="text-danger")= questions[index].status
                                        
                                        else if questions[index].status == "abs" || questions[index].status == "double"
                                            strong(class="text-warning")= questions[index].status
                                        else
                                            strong(class="text-success")= questions[index].status


                                        
                                    if disableChanges == false
                                        td(class="hide-sm")
                                            if questions[index].status == "error" || copy.status == "errorVersion" 
                                                strong(class="text-danger") -/-
                                            else
                                                strong= questions[index].totalPoint + '/' + questions[index].maxPoint

                                if(val.type == 'version')
                                    td(class="hide-sm")
                                        i Version
                                        - for(let i = 0; i < val.nbVersion; i++)
                                            td(style="text-align:center")
                                                if questions[index].status == "errorVersion"
                                                    input(class="form-check-input checkboxClass p-2 m-1", disabled=(disableChanges), type="checkbox", name=response value="yes")
                                                else
                                                    if questions[index].list[i] == 0
                                                        input(class="form-check-input checkboxClass p-2 m-1" disabled=(disableChanges) type="checkbox" name=response value="yes" )
                                                    else 
                                                        input(class="form-check-input checkboxClass p-2 m-1" checked disabled=(disableChanges) type="checkbox" name=response value="yes" )
                                    
                                    td 
                                        if questions[index].status == "errorVersion" 
                                            strong(class="text-danger")= questions[index].status
                                        
                                        else
                                            strong(class="text-success")= questions[index].status

                                    td(class="hide-sm")
                                        if questions[index] == "error"
                                            strong(class="text-danger") -
                                        else
                                            strong= questions[index].version


                    
                    if disableChanges
                        a(href=`/correction/sendEmail/${copy.id}` class="btn btn-danger bouton float-end") Faire une réclamation
                    else 
                        button(id='submitAnswersButton' class="btn btn-sm btn-danger col-12 col-xl-4 bouton float-end") Enregistrer les modifications de réponses
                        //- a(href=`/see/copies/${copy.exam.id}`)
                        //-     button( class="btn btn-sm btn-warning col-12 col-xl-4 bouton float-end") Voir l'ensemble des copies
                        if nextCopyId
                            a(href=`/see/copy/${nextCopyId}`)
                                button(class="btn btn-sm btn-warning col-12 col-xl-4 bouton float-end") Copie suivante
                        if prevCopyId
                            a(href=`/see/copy/${prevCopyId}`)
                                button( class="btn btn-sm btn-warning col-12 col-xl-4 bouton float-end") Copie précédente
                        
                       
        
                img(class="border rounded mx-auto d-block col-11 col-sm-6 mt-4 mt-md-0" src=`/see/copy/${copy.id}/download`)
                
            div(class="col-4 float-end")
                div Légende : 
                    li Cercle = réponse remplie détectée 
                    li Carré = réponse vide détectée

input(id="copyId",type="hidden", value=copy.id)
script(src='/javascript/correctImageProcess.js')
include ../footer.pug  